<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jincomp.jintest.web.jin.mapper.UserMapper">

	<resultMap type="com.jincomp.jintest.web.jin.vo.UserAuthVO"
		id="auth">
		<result column="USER_NO" property="userNo" />
		<result column="USER_AUTH" property="userAuth" />
	</resultMap>
	
	<resultMap type="com.jincomp.jintest.web.jin.vo.BookVO"
		id="book">
		<result column="GOODS_ID" property="goodsId" />
		<result column="GOODS_NAME" property="goodsName" />
	</resultMap>

	<resultMap type="com.jincomp.jintest.web.jin.vo.UserVO" id="user">
		<result column="USER_NO" property="userNo" />
		<result column="USER_NAME" property="userName" />
		<result column="USER_ID" property="userId" />
		<result column="USER_PASSWORD" property="userPassword" />
		<collection property="authVO" resultMap="auth" />
		<collection property="userAgeVO" resultMap="UserAgeCheckVo" />
	</resultMap>
	
	<resultMap type="com.jincomp.jintest.web.jin.vo.OrderVO" id="order">
		<result column="ORDER_ID" property="orderId"/>
		<result column="ORDER_PRICE" property="orderPrice"/>
		<result column="ORDER_DATE" property="orderDate"/>
		<collection property="UserVO" resultMap="user" />
		<collection property="BookVO" resultMap="book" />
	
	</resultMap>
	
	<resultMap type="com.jincomp.jintest.web.jin.vo.UserAgeCheckVo" id="UserAgeCheckVo">
		<result column="USER_NO" property="userNo" />
		<result column="USER_AGE_CHECK_YN" property="userAgeCheckYn" />
	</resultMap>
	


	<!--유저 로그인 -->
	<select id="loginUser"
		resultType="com.jincomp.jintest.web.jin.vo.UserVO"
		parameterType="com.jincomp.jintest.web.jin.vo.UserVO" resultMap="user">
		SELECT ul.USER_NO,
		ul.USER_ID,
		ul.USER_NAME,
		ul.USER_PASSWORD,
		ul.USER_ADDRESS,
		ua.user_no,
		ua.user_auth
		FROM USER_LOGIN ul
		left outer
		join user_auth ua
		on ul.user_no = ua.user_no
		WHERE USER_ID = #{userId}
	</select>

	<!-- 유저 번호로 정보 찾기 -->
	<select id="findUserByUserNo"
		resultType="com.jincomp.jintest.web.jin.vo.UserVO"
		parameterType="String">
		SELECT *
		FROM USER_LOGIN
		WHERE USER_ID = #{userId}
	</select>

	<!-- 권한만 조회 -->
	<select id="findUserAuth"
		resultType="com.jincomp.jintest.web.jin.vo.UserAuthVO"
		parameterType="String">
		SELECT USER_NO, USER_AUTH
		FROM USER_AUTH
		WHERE USER_NO =
		#{userNo}
	</select>

	<!-- 권한 업데이트 -->
	<update id="authUpdate" parameterType="String">
		UPDATE USER_AUTH
		SET
		USER_AUTH = "admin"
		WHERE USER_NO = #{userNo}
	</update>

	<!-- 권한 저장(회원가입 할 시, 디폴트로 user 넣으면됨. -->
	<insert id="insertAuth">
		INSERT INTO USER_AUTH
		(
		USER_NO,
		USER_AUTH
		)
		VALUES
		(
		#{userNo},
		#{userAuth}
		)
	</insert>
	<!-- 주문 내역 -->
	<select id="orderList"
		resultType="com.jincomp.jintest.web.jin.vo.OrderVO" resultMap="order">
		SELECT
		o.order_id , o.order_price , o.order_date , b.goods_id ,b.goods_name, ul.user_no
		FROM `order` o
		LEFT OUTER JOIN books b
		ON o.goods_id =
		b.goods_id
		LEFT OUTER JOIN user_login ul
		ON o.user_no = ul.user_no
		WHERE ul.user_no = #{userNo}
	</select>

	<!-- 아이디 중복검사 -->
	<select id="idChk" resultType="int"> 
		SELECT COUNT(*) FROM USER_LOGIN
		WHERE USER_ID = #{userId} 
	</select>
	
	<!-- 회원가입 -->
	<insert id="join" parameterType="com.jincomp.jintest.web.jin.vo.UserLogin"> 
		INSERT INTO USER_LOGIN (USER_NO, USER_ID, USER_PASSWORD, USER_NAME, USER_ADDRESS, USER_REG_NO)
		VALUES(edu.nextval("next_seq"), #{userId}, #{userPassword}, #{userName}, #{userAddress}, #{userRegNo}) 
	</insert>
		
	<!-- 포인트 등록 -->
	<insert id="getPoint" parameterType="com.jincomp.jintest.web.jin.vo.PointVO"> 
		INSERT INTO EDU.POINT (USER_NO, POINT)
		VALUES(edu.currval("next_seq"), #{point}) 
	</insert>
		
	<!-- 관리자 권한 user 등록 -->
	<insert id="getAuth" parameterType="com.jincomp.jintest.web.jin.vo.UserAuthVO">
		INSERT INTO EDU.USER_AUTH (USER_NO, USER_AUTH)
		VALUES(edu.currval("next_seq"), #{userAuth}) 
	</insert>

	<!-- 유저 업데이트 유무 등록 -->
	<insert id="getUserAgeCheckVo" parameterType="com.jincomp.jintest.web.jin.vo.UserAgeCheckVo">
		INSERT INTO EDU.USER_AGE_CHECK (USER_NO)
		VALUES(edu.currval("next_seq")) 
	</insert>
	
	
	<!--  결제(포인트 수정) -->
	<update id="updatePoint" parameterType="com.jincomp.jintest.web.jin.vo.PointVO">
		UPDATE point
		SET
		point = point - #{point}
		WHERE USER_NO = #{userNo}
	</update>
  
  
	<select id="adult" resultType="com.jincomp.jintest.web.jin.vo.UserVO">
		select 
		 a.USER_NO
		,a.USER_NAME
		,a.USER_ID
		,a.USER_ADDRESS
		,a.USER_REG_NO
		,b.USER_AGE_CHECK_YN
		from USER_LOGIN as a
		inner join USER_AGE_CHECK as b 
		on a.USER_NO = b.USER_NO 
		where USER_NAME = #{userName} and user_reg_no = #{userRegNo}
	</select>
	
	<update id="changeAdult">
		update 
		USER_LOGIN as a 
		inner join 
		USER_AGE_CHECK	as b 
		on a.USER_NO = b.USER_NO 
		set b.USER_AGE_CHECK_YN = 'y'
		where a.USER_NO = #{userNo}
	
	</update>
  
</mapper>